    /*
    *************************************************************************
    **  Included in SQLite3 port to C#-SQLite;  2008 Noah B Hart
    **  C#-SQLite is an independent reimplementation of the SQLite software library
    **
    **  Repository path : $HeadURL: https://sqlitecs.googlecode.com/svn/trunk/C%23SQLite/src/opcodes_c.cs $
    **  Revision        : $Revision$
    **  Last Change Date: $LastChangedDate: 2009-08-04 13:34:52 -0700 (Tue, 04 Aug 2009) $
    **  Last Changed By : $LastChangedBy: noah.hart $
    *************************************************************************
    */
namespace CS_SQLite3
{
  public partial class CSSQLite
  {
    /* Automatically generated.  Do not edit */
    /* See the mkopcodec.awk script for details. */
#if !SQLITE_OMIT_EXPLAIN || !NDEBUG || VDBE_PROFILE || SQLITE_DEBUG
    static string sqlite3OpcodeName( int i )
    {
      string[] azName =  { "?",
/*   1 */ "VNext",
/*   2 */ "Affinity",
/*   3 */ "Column",
/*   4 */ "SetCookie",
/*   5 */ "Seek",
/*   6 */ "Sequence",
/*   7 */ "Savepoint",
/*   8 */ "RowKey",
/*   9 */ "SCopy",
/*  10 */ "OpenWrite",
/*  11 */ "If",
/*  12 */ "CollSeq",
/*  13 */ "OpenRead",
/*  14 */ "Expire",
/*  15 */ "AutoCommit",
/*  16 */ "Pagecount",
/*  17 */ "IntegrityCk",
/*  18 */ "Sort",
/*  19 */ "Not",
/*  20 */ "Copy",
/*  21 */ "Trace",
/*  22 */ "Function",
/*  23 */ "IfNeg",
/*  24 */ "Noop",
/*  25 */ "Return",
/*  26 */ "NewRowid",
/*  27 */ "Variable",
/*  28 */ "String",
/*  29 */ "RealAffinity",
/*  30 */ "VRename",
/*  31 */ "ParseSchema",
/*  32 */ "VOpen",
/*  33 */ "Close",
/*  34 */ "CreateIndex",
/*  35 */ "IsUnique",
/*  36 */ "NotFound",
/*  37 */ "Int64",
/*  38 */ "MustBeInt",
/*  39 */ "Halt",
/*  40 */ "Rowid",
/*  41 */ "IdxLT",
/*  42 */ "AddImm",
/*  43 */ "Statement",
/*  44 */ "RowData",
/*  45 */ "MemMax",
/*  46 */ "NotExists",
/*  47 */ "Gosub",
/*  48 */ "Integer",
/*  49 */ "Prev",
/*  50 */ "RowSetRead",
/*  51 */ "RowSetAdd",
/*  52 */ "VColumn",
/*  53 */ "CreateTable",
/*  54 */ "Last",
/*  55 */ "SeekLe",
/*  56 */ "IncrVacuum",
/*  57 */ "IdxRowid",
/*  58 */ "ResetCount",
/*  59 */ "ContextPush",
/*  60 */ "Yield",
/*  61 */ "DropTrigger",
/*  62 */ "DropIndex",
/*  63 */ "IdxGE",
/*  64 */ "IdxDelete",
/*  65 */ "Vacuum",
/*  66 */ "Or",
/*  67 */ "And",
/*  68 */ "IfNot",
/*  69 */ "DropTable",
/*  70 */ "SeekLt",
/*  71 */ "IsNull",
/*  72 */ "NotNull",
/*  73 */ "Ne",
/*  74 */ "Eq",
/*  75 */ "Gt",
/*  76 */ "Le",
/*  77 */ "Lt",
/*  78 */ "Ge",
/*  79 */ "MakeRecord",
/*  80 */ "BitAnd",
/*  81 */ "BitOr",
/*  82 */ "ShiftLeft",
/*  83 */ "ShiftRight",
/*  84 */ "Add",
/*  85 */ "Subtract",
/*  86 */ "Multiply",
/*  87 */ "Divide",
/*  88 */ "Remainder",
/*  89 */ "Concat",
/*  90 */ "ResultRow",
/*  91 */ "Delete",
/*  92 */ "AggFinal",
/*  93 */ "BitNot",
/*  94 */ "String8",
/*  95 */ "Compare",
/*  96 */ "Goto",
/*  97 */ "TableLock",
/*  98 */ "Clear",
/*  99 */ "VerifyCookie",
/* 100 */ "AggStep",
/* 101 */ "SetNumColumns",
/* 102 */ "Transaction",
/* 103 */ "VFilter",
/* 104 */ "VDestroy",
/* 105 */ "ContextPop",
/* 106 */ "Next",
/* 107 */ "Count",
/* 108 */ "IdxInsert",
/* 109 */ "SeekGe",
/* 110 */ "Insert",
/* 111 */ "Destroy",
/* 112 */ "ReadCookie",
/* 113 */ "RowSetTest",
/* 114 */ "LoadAnalysis",
/* 115 */ "Explain",
/* 116 */ "HaltIfNull",
/* 117 */ "OpenPseudo",
/* 118 */ "OpenEphemeral",
/* 119 */ "Null",
/* 120 */ "Move",
/* 121 */ "Blob",
/* 122 */ "Rewind",
/* 123 */ "SeekGt",
/* 124 */ "VBegin",
/* 125 */ "VUpdate",
/* 126 */ "IfZero",
/* 127 */ "VCreate",
/* 128 */ "Found",
/* 129 */ "IfPos",
/* 130 */ "Real",
/* 131 */ "NullRow",
/* 132 */ "Jump",
/* 133 */ "Permutation",
/* 134 */ "NotUsed_134",
/* 135 */ "NotUsed_135",
/* 136 */ "NotUsed_136",
/* 137 */ "NotUsed_137",
/* 138 */ "NotUsed_138",
/* 139 */ "NotUsed_139",
/* 140 */ "NotUsed_140",
/* 141 */ "ToText",
/* 142 */ "ToBlob",
/* 143 */ "ToNumeric",
/* 144 */ "ToInt",
/* 145 */ "ToReal",
};
      return azName[i];
    }
#endif
  }
}
